{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport { Text, StyleSheet, TouchableOpacity, FlatList, View, ImageBackground } from \"react - native\";\nimport { Header, Icon, Avatar } from \"react - native - elements\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction ListItem(_ref) {\n  var contato = _ref.item,\n    navigation = _ref.navigation;\n  return _jsxs(TouchableOpacity, {\n    style: styles.listItem,\n    onPress: function onPress() {\n      return navigation.navigate(\"EditarContato\", {\n        id: contato.id\n      });\n    },\n    children: [\" \", _jsx(Avatar, {\n      size: \"medium\",\n      rounded: true,\n      source: {\n        uri: contato.avatar_url\n      }\n    }), \" \", _jsx(Text, {\n      style: styles.name,\n      children: contato.name\n    }), \" \"]\n  });\n}\nexport default function ListaTell(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(_Fragment, {\n    children: [\" \", _jsx(Header, {\n      centerComponent: {\n        text: \"Lista de Contatos\",\n        style: styles.headerText\n      },\n      rightComponent: _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"NovoContato\");\n        },\n        children: [\" \", _jsx(Icon, {\n          name: \"add\",\n          color: \"#fff\"\n        }), \" \"]\n      }),\n      containerStyle: styles.headerContainer\n    }), _jsx(FlatList, {\n      data: contatos,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(ListItem, {\n          item: item,\n          navigation: navigation\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\"\n  },\n  listItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 15,\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n    borderRadius: 10,\n    margin: 10\n  },\n  name: {\n    marginLeft: 10,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#333\"\n  },\n  headerText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  headerContainer: {\n    backgroundColor: \"#1670f7\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Text","StyleSheet","TouchableOpacity","FlatList","View","ImageBackground","Header","Icon","Avatar","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListItem","_ref","contato","item","navigation","style","styles","listItem","onPress","navigate","id","children","size","rounded","source","uri","avatar_url","name","ListaTell","_ref2","centerComponent","text","headerText","rightComponent","color","containerStyle","headerContainer","data","contatos","keyExtractor","renderItem","_ref3","create","container","flexDirection","alignItems","padding","backgroundColor","borderRadius","margin","marginLeft","fontSize","fontWeight"],"sources":["C:/Users/Aluno/Desktop/Nova pasta/ProjetoReactNative/pages/ListaTell.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; import { Text, StyleSheet, TouchableOpacity, FlatList, View, ImageBackground } from \"react - native\"; import { Header, Icon, Avatar } from \"react - native - elements\"; import axios from \"axios\";\r\n\r\n// Cria um componente para cada item da lista \r\nfunction ListItem({ item: contato, navigation }) { return ( <TouchableOpacity style={styles.listItem} \r\n  // Navega para a tela de editar contato com o id do contato \r\n  onPress={() => navigation.navigate(\"EditarContato\", { id: contato.id })} > <Avatar size=\"medium\" rounded source={{ uri: contato.avatar_url, }} /> <Text style={styles.name}>{contato.name}</Text> </TouchableOpacity> ); }\r\n\r\nexport default function ListaTell({ navigation }) {\r\n\r\n  // Cria um estado para armazenar os contatos const [contatos, setContatos] = useState([]);\r\n\r\n  // Cria uma função para consultar os dados dos contatos function consultarDados() { // Faz uma requisição GET para a API dos contatos axios.get(\"http://localhost:3000/contatos\") .then(function (response) { // Atualiza o estado com os dados recebidos setContatos(response.data); }).catch(function (error) { // Mostra o erro no console console.log(error); }); }\r\n\r\n  // Chama a função de consultar dados quando o componente é montado useEffect(() => { consultarDados(); }, []);\r\n\r\n  return (<> <Header centerComponent={{ text: \"Lista de Contatos\", style: styles.headerText, }} rightComponent={<TouchableOpacity onPress={() => navigation.navigate(\"NovoContato\")}> <Icon name=\"add\" color=\"#fff\" /> </TouchableOpacity >} containerStyle={styles.headerContainer} />\r\n\r\n    <FlatList\r\n      data={contatos}\r\n      keyExtractor={(item) => item.id}\r\n      renderItem={({ item }) => (\r\n        <ListItem item={item} navigation={navigation} />\r\n      )}\r\n    />\r\n  </>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flexDirection: \"column\", }, listItem: { flexDirection: \"row\", alignItems: \"center\", padding: 15, backgroundColor: \"rgba(255, 255, 255, 0.8)\", borderRadius: 10, margin: 10, }, name: { marginLeft: 10, fontSize: 18, fontWeight: \"bold\", color: \"#333\", }, headerText: { color: \"#fff\", fontWeight: \"bold\", fontSize: 18, }, headerContainer: { backgroundColor: \"#1670f7\", },\r\n\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}