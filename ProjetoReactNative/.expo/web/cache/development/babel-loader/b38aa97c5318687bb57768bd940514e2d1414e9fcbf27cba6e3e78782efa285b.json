{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Header, Icon, Avatar } from 'react-native-elements';\nimport { useIsFocused } from '@react-navigation/native';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction ListItem(_ref) {\n  var _ref$item = _ref.item,\n    id = _ref$item.id,\n    name = _ref$item.name,\n    avatar_url = _ref$item.avatar_url,\n    telefone = _ref$item.telefone,\n    email = _ref$item.email,\n    navigation = _ref.navigation;\n  return _jsxs(TouchableOpacity, {\n    style: styles.listItem,\n    onPress: function onPress() {\n      return navigation.navigate('EditarContato', {\n        id: id,\n        name: name,\n        telefone: telefone,\n        email: email\n      });\n    },\n    children: [_jsx(Avatar, {\n      size: \"medium\",\n      rounded: true,\n      source: {\n        uri: avatar_url\n      }\n    }), _jsx(Text, {\n      style: styles.name,\n      children: name\n    })]\n  });\n}\nexport default function ListaTell(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    contatos = _useState2[0],\n    setContatos = _useState2[1];\n  useEffect(function () {\n    axios.get('http://localhost:3000/contatos').then(function (response) {\n      setContatos(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      centerComponent: {\n        text: 'Lista de Contatos',\n        style: styles.headerText\n      },\n      rightComponent: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('NovoContato');\n        },\n        children: _jsx(Icon, {\n          name: \"add\",\n          color: \"#fff\"\n        })\n      }),\n      containerStyle: styles.headerContainer\n    }), _jsx(FlatList, {\n      data: contatos,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(ListItem, {\n          item: item,\n          navigation: navigation\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column'\n  },\n  listItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 15,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 10,\n    margin: 10\n  },\n  name: {\n    marginLeft: 10,\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  headerText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  headerContainer: {\n    backgroundColor: \"#1670f7\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Text","StyleSheet","TouchableOpacity","FlatList","Header","Icon","Avatar","useIsFocused","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListItem","_ref","_ref$item","item","id","name","avatar_url","telefone","email","navigation","style","styles","listItem","onPress","navigate","children","size","rounded","source","uri","ListaTell","_ref2","_useState","_useState2","_slicedToArray","contatos","setContatos","get","then","response","data","catch","error","console","log","centerComponent","text","headerText","rightComponent","color","containerStyle","headerContainer","keyExtractor","renderItem","_ref3","create","container","flexDirection","alignItems","padding","backgroundColor","borderRadius","margin","marginLeft","fontSize","fontWeight"],"sources":["C:/Users/Aluno/Desktop/Nova pasta/ProjetoReactNative/pages/ListaTell.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, StyleSheet, TouchableOpacity, FlatList } from 'react-native';\r\nimport { Header, Icon, Avatar } from 'react-native-elements';\r\nimport { useIsFocused } from '@react-navigation/native';\r\nimport axios from 'axios';\r\n\r\nfunction ListItem({ item: { id, name, avatar_url, telefone, email }, navigation }) {\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.listItem}\r\n      onPress={() => navigation.navigate('EditarContato',\r\n        { id, name, telefone, email })}\r\n    >\r\n      <Avatar\r\n        size=\"medium\"\r\n        rounded\r\n        source={{\r\n          uri: avatar_url,\r\n        }}\r\n      />\r\n      <Text style={styles.name}>{name}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nexport default function ListaTell({ navigation }) {\r\n\r\n  const [contatos, setContatos] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/contatos')\r\n      .then(function (response) {\r\n        setContatos(response.data);\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        centerComponent={{\r\n          text: 'Lista de Contatos',\r\n          style: styles.headerText,\r\n        }}\r\n        rightComponent={\r\n          <TouchableOpacity onPress={() => navigation.navigate('NovoContato')}>\r\n            <Icon name=\"add\" color=\"#fff\" />\r\n          </TouchableOpacity>\r\n        }\r\n        containerStyle={styles.headerContainer}\r\n      />\r\n\r\n      <FlatList\r\n        data={contatos}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={({ item }) => (\r\n          <ListItem item={item} navigation={navigation} />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'column',\r\n  },\r\n  listItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    borderRadius: 10,\r\n    margin: 10,\r\n  },\r\n  name: {\r\n    marginLeft: 10,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  headerText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n  },\r\n  headerContainer: {\r\n    backgroundColor: \"#1670f7\",\r\n  },\r\n\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}